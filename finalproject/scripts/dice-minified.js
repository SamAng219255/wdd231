class DieResult{constructor(e,t){this.die=e,this.results=t||[],this.calculateTotal()}calculateTotal(){this.total=0;for(let e=0;e<this.results.length;e++)this.total+=this.results[e]}toString(e){let t="";if(e)t=this.results.join(" + ");else{let e=this.die.sides;t=this.results.map((t=>e>1&&t==e?`<span class="roll-max">${t}</span>`:e>1&&1==t?`<span class="roll-min">${t}</span>`:`${t}`)).join(" + ")}return 1==this.results.length?`${this.die.toString(e)} (${t})`:`${this.die.toString(e)} (${this.total} = ${t})`}toJson(){return JSON.stringify(this)}static from(e){e.die=Die.from(e.die);const t=Object.assign(new DieResult,e);return t.calculateTotal(),t}static fromJson(e){const t=JSON.parse(e);return DieResult.from(t)}}class Die{constructor(e,t,i){this.count=e,this.sides=t,this.properties=i||{}}rollOne(){return parseInt(Math.random()*this.sides)+1}roll(){let e=[];for(let t=0;t<this.count;t++){let t=this.rollOne();if("exploding"in this.properties&&this.properties.exploding&&t==this.sides){let e;do{e=this.rollOne(),t+=e}while(e==this.sides)}e.push(t)}return"highest"in this.properties?(e.sort(((e,t)=>e-t)),e=this.properties.drop?e.slice(0,-this.properties.highest):e.slice(-this.properties.highest)):"lowest"in this.properties&&(e.sort(((e,t)=>e-t)),e=this.properties.drop?e.slice(this.properties.lowest):e.slice(0,this.properties.lowest)),new DieResult(this.copy(),e)}max(){const e=this.properties.drop?this.count-(this.properties.highest||this.properties.lowest||0):this.properties.highest||this.properties.lowest||this.count;return new DieResult(this.copy(),Array(e).fill(this.sides))}min(){const e=this.properties.drop?this.count-(this.properties.highest||this.properties.lowest||0):this.properties.highest||this.properties.lowest||this.count;return new DieResult(this.copy(),Array(e).fill(1))}copy(){return new Die(this.count,this.sides,this.properties)}toString(e){const t="exploding"in this.properties&&this.properties.exploding?"!":"",i=this.properties.highest||this.properties.lowest?` ${this.properties.drop?"drop":"keep"} the${this.properties.highest>1||this.properties.lowest>1?` ${this.properties.highest||this.properties.lowest}`:""} ${this.properties.highest?"highest":"lowest"}`:"";return`${this.count}d${this.sides}${t}${i}`}toJson(){return JSON.stringify(this)}static from(e){return Object.assign(new Die,e)}static fromJson(e){const t=JSON.parse(e);return Die.from(t)}}class DiceResult{constructor(e,t){this.dice=e,this.results=t||[],this.calculateTotal()}calculateTotal(){this.total=0;for(let e=0;e<this.results.length;e++)this.total+=this.results[e].total;this.total+=(this.dice||{modifier:0}).modifier}toString(e){const t=this.results.map((t=>t.toString(e))).join(" + ");return e?`${this.total} = ${t} + ${this.dice.modifier}`:`<b>${this.total}</b> = ${t} + ${this.dice.modifier}`}toJson(){return JSON.stringify(this)}static from(e){e.dice=Dice.from(e.dice);for(let t=0;t<e.results.length;t++)e.results[t]=DieResult.from(e.results[t]);const t=Object.assign(new DiceResult,e);return t.calculateTotal(),t}static fromJson(e){const t=JSON.parse(e);return DiceResult.from(t)}}class Dice{constructor(e,t){if(e=e||[],this.dice=[],Array.isArray(e))for(let t=0;t<e.length;t++)this.dice.push(e[t].copy());else(e instanceof Dice||e instanceof Die)&&this.dice.push(e.copy());this.modifier=t||0}roll(){let e=[];for(let t=0;t<this.dice.length;t++)e.push(this.dice[t].roll());return new DiceResult(this.copy(),e)}max(){let e=[];for(let t=0;t<this.dice.length;t++)e.push(this.dice[t].max());return new DiceResult(this.copy(),e)}min(){let e=[];for(let t=0;t<this.dice.length;t++)e.push(this.dice[t].min());return new DiceResult(this.copy(),e)}toString(e){let t=this.dice.join(", ");return`${t}${t.length>0?", ":""}${this.modifier>=0?"+":""}${this.modifier}`}copy(){return new Dice(this.dice,this.modifier)}toJson(){return JSON.stringify(this)}static from(e){for(let t=0;t<e.dice.length;t++)e.dice[t]=Die.from(e.dice[t]);return Object.assign(new Dice,e)}static fromJson(e){const t=JSON.parse(e);return Dice.from(t)}}let diceData;function setLocalStorage(){localStorage.setItem("dice-info",JSON.stringify(diceData))}function getLocalStorage(){diceData={currentDice:new Dice([new Die(1,20)]),history:[],favorites:[],toggles:{}};const e=localStorage.getItem("dice-info");if(!e)return;const t=JSON.parse(e);diceData.currentDice=Dice.from(t.currentDice),t.history.forEach((e=>{diceData.history.push(DiceResult.from(e))})),t.favorites.forEach((e=>{diceData.favorites.push(Dice.from(e))})),t.toggles={},t.toggles.diceSettings?(diceData.toggles.diceSettings=!0,toggleDiceSettings()):diceData.toggles.diceSettings=!1,t.toggles.favorites?(diceData.toggles.favorites=!0,toggleFavorites()):diceData.toggles.favorites=!1,t.toggles.history?(diceData.toggles.history=!0,toggleHistory()):diceData.toggles.history=!1}function updateDiceSummary(){document.getElementById("current-dice-display").innerHTML=`<b>Dice</b>: ${diceData.currentDice}`,activateFavoriteBtn()}const diceGroups=document.getElementById("dice-groups");function updateDiceGroups(){diceGroups.innerHTML="",diceData.currentDice.dice.forEach((e=>{const t=diceGroups.childElementCount,i=document.createElement("div");i.classList.add("dice-group");const o=document.createElement("p");o.innerHTML=`<b>Dice</b>: ${e}`,i.appendChild(o);const n=document.createElement("label");n.innerText="Dice Count: ";const r=document.createElement("input");r.type="number",r.id=`dice-group-${t}-count`,r.value=`${e.count}`,r.addEventListener("change",(e=>{diceData.currentDice.dice[t].count=parseInt(e.target.value||0),updateDiceGroups(),setLocalStorage()})),n.appendChild(r),i.appendChild(n);const c=document.createElement("label");c.innerText="Sides: ";const s=document.createElement("input");s.type="number",s.id=`dice-group-${t}-sides`,s.value=`${e.sides}`,s.addEventListener("change",(e=>{diceData.currentDice.dice[t].sides=parseInt(e.target.value||0),updateDiceGroups(),setLocalStorage()})),c.appendChild(s),i.appendChild(c),(e.properties.highest||e.properties.lowest?replaceRuleButton:setRuleBtn)(i,t);const a=document.createElement("button"),d=document.createElement("img");d.loading="lazy",d.width=d.height="18",d.src="images/x-ink.svg",d.alt="delete icon",a.appendChild(d),a.appendChild(document.createTextNode(" Delete Dice Group")),a.addEventListener("click",(e=>{confirm("Are you sure you want to delete this dice group?\nYou can't undo this.")&&(diceData.currentDice.dice.splice(t,1),updateDiceGroups(),setLocalStorage())})),i.appendChild(a),diceGroups.appendChild(i)})),document.getElementById("dice-modifier").value=diceData.currentDice.modifier,updateDiceSummary()}function setRuleBtn(e,t){const i=document.createElement("button"),o=document.createElement("img");o.loading="lazy",o.width=o.height="18",o.src="images/plus-ink.svg",o.alt="plus icon",i.appendChild(o),i.appendChild(document.createTextNode(" Add Rule")),i.addEventListener("click",(e=>{diceData.currentDice.dice[t].properties={drop:!1,highest:1},updateDiceGroups()})),e.appendChild(i)}function replaceRuleButton(e,t){const i=diceData.currentDice.dice[t],o=document.createElement("div");o.classList.add("rules-wrapper");const n=document.createElement("div");n.appendChild(document.createTextNode("Rule Type:"));const r=document.createElement("label"),c=document.createElement("input");c.type="radio",c.checked=!i.properties.drop,c.name=`dice-group-${t}-rule-type`,c.value="keep",c.addEventListener("change",(e=>{const o=document.querySelector(`input[name="dice-group-${t}-rule-type"]:checked`).value;i.properties.drop="drop"==o,updateDiceGroups(),setLocalStorage()})),r.appendChild(c),r.appendChild(document.createTextNode("Keep")),n.appendChild(r);const s=document.createElement("label"),a=document.createElement("input");a.type="radio",a.checked=i.properties.drop,a.name=`dice-group-${t}-rule-type`,a.value="drop",a.addEventListener("change",(e=>{const o=document.querySelector(`input[name="dice-group-${t}-rule-type"]:checked`).value;i.properties.drop="drop"==o,updateDiceGroups(),setLocalStorage()})),s.appendChild(a),s.appendChild(document.createTextNode("Drop")),n.appendChild(s),o.appendChild(n);const d=document.createElement("label");d.appendChild(document.createTextNode("Affected Dice Count:"));const l=document.createElement("input");l.type="number",l.id=`dice-group-${t}-rule-count`,l.value=i.properties.highest||i.properties.lowest||1,l.addEventListener("change",(e=>{const o=document.querySelector(`input[name="dice-group-${t}-rule-high-low"]:checked`).value;i.properties[o]=parseInt(l.value),updateDiceGroups(),setLocalStorage()})),d.appendChild(l),o.appendChild(d);const p=document.createElement("div");p.appendChild(document.createTextNode("Affected Type:"));const u=document.createElement("label"),h=document.createElement("input");h.type="radio",h.checked="highest"in i.properties,h.name=`dice-group-${t}-rule-high-low`,h.value="highest",h.addEventListener("change",(e=>{const o=document.querySelector(`input[name="dice-group-${t}-rule-high-low"]:checked`).value,n=document.querySelector(`input[name="dice-group-${t}-rule-high-low"]:not(checked)`).value;i.properties[o]=l.value,delete i.properties[n],updateDiceGroups(),setLocalStorage()})),u.appendChild(h),u.appendChild(document.createTextNode("Highest")),p.appendChild(u);const g=document.createElement("label"),m=document.createElement("input");m.type="radio",m.checked="lowest"in i.properties,m.name=`dice-group-${t}-rule-high-low`,m.value="lowest",m.addEventListener("change",(e=>{const o=document.querySelector(`input[name="dice-group-${t}-rule-high-low"]:checked`).value,n=document.querySelector(`input[name="dice-group-${t}-rule-high-low"]:not(checked)`).value;i.properties[o]=l.value,delete i.properties[n],updateDiceGroups(),setLocalStorage()})),g.appendChild(m),g.appendChild(document.createTextNode("Lowest")),p.appendChild(g),o.appendChild(p);const v=document.createElement("button"),f=document.createElement("img");f.loading="lazy",f.width=f.height="18",f.src="images/minus-ink.svg",f.alt="minus icon",v.appendChild(f),v.appendChild(document.createTextNode(" Remove Rule")),v.addEventListener("click",(e=>{diceData.currentDice.dice[t].properties={},updateDiceGroups()})),o.appendChild(v),e.appendChild(o)}const historySection=document.getElementById("history");function updateHistory(){if(diceData.history=diceData.history.slice(0,100),historySection.innerHTML="",diceData.history.forEach((e=>{const t=historySection.childElementCount,i=document.createElement("div");i.classList.add("history-entry");const o=document.createElement("p");o.innerHTML=`${e}`,i.appendChild(o);const n=document.createElement("button"),r=document.createElement("img");r.loading="lazy",r.width=r.height="18",r.src="images/dice-ink.svg",r.alt="delete icon",n.appendChild(r),n.appendChild(document.createTextNode(" Use these dice again")),n.addEventListener("click",(e=>{diceData.currentDice=diceData.history[t].dice,updateDiceGroups(),setLocalStorage(),document.getElementById("dice-builder").scrollIntoView({behavior:"smooth"})})),i.appendChild(n),historySection.appendChild(i)})),0==diceData.history.length){const e=document.createElement("p");e.innerText="You have no history yet! The results of the last 100 rolls you make will appear here.",historySection.appendChild(e)}}const favoritesSection=document.getElementById("favorites");function updateFavorites(){if(favoritesSection.innerHTML="",diceData.favorites.forEach((e=>{const t=favoritesSection.childElementCount,i=document.createElement("div");i.classList.add("favorites-entry");const o=document.createElement("p");o.innerHTML=`<b>Dice</b>: ${e}`,i.appendChild(o);const n=document.createElement("button"),r=document.createElement("img");r.loading="lazy",r.width=r.height="18",r.src="images/dice-ink.svg",r.alt="delete icon",n.appendChild(r),n.appendChild(document.createTextNode(" Use these dice")),n.addEventListener("click",(e=>{diceData.currentDice=diceData.favorites[t],updateDiceGroups(),setLocalStorage(),document.getElementById("dice-builder").scrollIntoView({behavior:"smooth"})})),i.appendChild(n);const c=document.createElement("button"),s=document.createElement("img");s.loading="lazy",s.width=s.height="18",s.src="images/star-filled-ink.svg",s.alt="delete icon",c.appendChild(s),c.appendChild(document.createTextNode(" Remove from Favorites")),c.addEventListener("click",(e=>{diceData.favorites.splice(t,1),diceData.favorites.length==t&&activateFavoriteBtn(),updateFavorites(),setLocalStorage()})),i.appendChild(c),favoritesSection.appendChild(i)})),0==diceData.favorites.length){const e=document.createElement("p");e.innerText='You have no favorites yet! Click "Add to Favorites" to save dice here to use later.',favoritesSection.appendChild(e)}}getLocalStorage(),setLocalStorage();let favoriteBtnState=!1;const favoriteBtn=document.getElementById("favorite");function toggleDiceSettings(e){const t=document.getElementById("dice-info"),i=document.getElementById("show-dice-info");if(t.classList.toggle("hide"),t.classList.contains("hide")){i.innerHTML="";const e=document.createElement("img");e.loading="lazy",e.height=e.width="18",e.alt="plus icon",e.src="images/plus-charcoal.svg",i.appendChild(e),i.appendChild(document.createTextNode(" Show Dice Settings")),diceData.toggles.diceSettings=!0}else{i.innerHTML="";const e=document.createElement("img");e.loading="lazy",e.height=e.width="18",e.alt="minus icon",e.src="images/minus-charcoal.svg",i.appendChild(e),i.appendChild(document.createTextNode(" Hide Dice Settings")),diceData.toggles.diceSettings=!1}}function toggleFavorites(e){const t=document.getElementById("favorites"),i=document.getElementById("show-favorites");if(t.classList.toggle("hide"),t.classList.contains("hide")){i.innerHTML="";const e=document.createElement("img");e.loading="lazy",e.height=e.width="18",e.alt="plus icon",e.src="images/plus-charcoal.svg",i.appendChild(e),i.appendChild(document.createTextNode(" Show Favorites")),diceData.toggles.favorites=!1}else{i.innerHTML="";const e=document.createElement("img");e.loading="lazy",e.height=e.width="18",e.alt="minus icon",e.src="images/minus-charcoal.svg",i.appendChild(e),i.appendChild(document.createTextNode(" Hide Favorites")),diceData.toggles.favorites=!0}}function toggleHistory(e){const t=document.getElementById("history"),i=document.getElementById("show-history");if(t.classList.toggle("hide"),t.classList.contains("hide")){i.innerHTML="";const e=document.createElement("img");e.loading="lazy",e.height=e.width="18",e.alt="plus icon",e.src="images/plus-charcoal.svg",i.appendChild(e),i.appendChild(document.createTextNode(" Show History")),diceData.toggles.history=!1}else{i.innerHTML="";const e=document.createElement("img");e.loading="lazy",e.height=e.width="18",e.alt="minus icon",e.src="images/minus-charcoal.svg",i.appendChild(e),i.appendChild(document.createTextNode(" Hide History")),diceData.toggles.history=!0}}function activateFavoriteBtn(){if(favoriteBtnState)return;favoriteBtnState=!0,favoriteBtn.innerHTML="";const e=document.createElement("img");e.loading="lazy",e.height=e.width="18",e.alt="not currently favorited icon",e.src="images/star-empty-charcoal.svg",favoriteBtn.appendChild(e),favoriteBtn.appendChild(document.createTextNode(" Add to Favorites")),favoriteBtn.removeEventListener("click",triggerFavoriteBtn,{once:!0}),favoriteBtn.removeEventListener("click",triggerUnfavoriteBtn,{once:!0}),favoriteBtn.addEventListener("click",triggerFavoriteBtn,{once:!0})}function triggerFavoriteBtn(e){diceData.favorites.push(diceData.currentDice.copy()),updateFavorites(),setLocalStorage(),activateUnfavoriteBtn()}function activateUnfavoriteBtn(){if(!favoriteBtnState)return;favoriteBtnState=!1,favoriteBtn.innerHTML="";const e=document.createElement("img");e.loading="lazy",e.height=e.width="18",e.alt="currently favorited icon",e.src="images/star-filled-charcoal.svg",favoriteBtn.appendChild(e),favoriteBtn.appendChild(document.createTextNode(" Remove from Favorites")),favoriteBtn.removeEventListener("click",triggerFavoriteBtn,{once:!0}),favoriteBtn.removeEventListener("click",triggerUnfavoriteBtn,{once:!0}),favoriteBtn.addEventListener("click",triggerUnfavoriteBtn,{once:!0})}function triggerUnfavoriteBtn(e){diceData.favorites.pop(),updateFavorites(),setLocalStorage(),activateFavoriteBtn()}updateDiceSummary(),updateDiceGroups(),updateHistory(),updateFavorites(),document.getElementById("show-dice-info").addEventListener("click",(e=>{toggleDiceSettings(e),setLocalStorage()})),document.getElementById("show-favorites").addEventListener("click",(e=>{toggleFavorites(e),setLocalStorage()})),document.getElementById("show-history").addEventListener("click",(e=>{toggleHistory(e),setLocalStorage()})),document.getElementById("dice-modifier").addEventListener("change",(e=>{diceData.currentDice.modifier=parseInt(e.target.value||0),updateDiceSummary(),setLocalStorage()})),document.getElementById("add-dice-group").addEventListener("click",(e=>{diceData.currentDice.dice.push(new Die(1,6)),updateDiceGroups(),setLocalStorage()}));const latestDiceResult=document.getElementById("latest-dice-result");document.getElementById("roll-current").addEventListener("click",(e=>{const t=diceData.currentDice.roll();diceData.history.splice(0,0,t),latestDiceResult.innerHTML=`<b>Result</b>: ${t}`,updateHistory(),setLocalStorage()})),document.getElementById("max-current").addEventListener("click",(e=>{const t=diceData.currentDice.max();diceData.history.splice(0,0,t),latestDiceResult.innerHTML=`<b>Result</b>: ${t}`,updateHistory(),setLocalStorage()})),document.getElementById("min-current").addEventListener("click",(e=>{const t=diceData.currentDice.min();diceData.history.splice(0,0,t),latestDiceResult.innerHTML=`<b>Result</b>: ${t}`,updateHistory(),setLocalStorage()}));